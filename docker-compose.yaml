version: '3.9'

volumes:
  django_azure_local: {}

services:
  web:
    container_name: django_azure_web
    build:
      context: ./
      dockerfile: ./docker/local.Dockerfile
    env_file: .env.local
    command: bash -c  "python3 manage.py runserver 0.0.0.0:8000"
    # command: bash -c "gunicorn --bind 0.0.0.0:8000 docker_django.wsgi:application"
    # command: bash -c "django-admin startproject django_azure"
    ports:
      - "8001:8000"
    volumes:
      - ./:/app
    # depends_on:
    #   - celery_beat_docker
    #   - celery_worker_docker
        

  # db_docker:
  #   image: postgres:12.8
  #   volumes:
  #     - docker_project_local:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   env_file: .env.local

  # celery_beat_docker:
  #   container_name: django-docker-celery
  #   build:
  #     context: ./
  #     dockerfile: ./docker/local.Dockerfile
  #   env_file: .env.local
  #   command: bash -c "celery -A docker_django beat -l info"
  #   volumes:
  #     - ./:/app
  #   depends_on:
  #     - redis

  # celery_worker_docker:
  #   container_name: django-docker-celery-worker
  #   build:
  #     context: ./
  #     dockerfile: ./docker/local.Dockerfile
  #   env_file: .env.local
  #   command: bash -c "celery -A docker_django worker -l info --logfile docker_celery.log"
  #   volumes:
  #     - ./:/app
  #   depends_on:
  #     - redis

  # nginx:
  #   build:
  #     context: ./
  #     dockerfile: ./docker/nginx.Dockerfile
  #   ports:
  #     - 1337:80
  #   depends_on:
  #     - web
      
  # redis:
  #   image: redis:latest  
  #   env_file: .env.local
